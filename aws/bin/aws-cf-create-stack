#!/usr/bin/env bash

# AWS CloudFormation Create Stack command
# =======================================
# Tim Friske <me@tifr.de>
#
# Creates an AWS CloudFormation stack from the given template file (cft.yml) and
# config file (cfc.json). Optionally the stack name from the config file may be
# overridden if given as the third positional parameter.
#
# Deps:: aws, bash, env, jq

# Ensure fail-fast script execution.
shopt -os nounset pipefail errexit errtrace

# Input parameters and validation:
TEMPLATE_FILE="${1:-${TEMPLATE_FILE:?required}}"
CONFIG_FILE="${2:-${CONFIG_FILE:?required}}"
STACK_NAME="${3:-${STACK_NAME:-}}" # optional override

# Derived parameters:
TEMPLATE_FILE="${TEMPLATE_FILE/#/file://}" # Prepend 'file://'
STACK_NAME="${STACK_NAME:-$(jq --raw-output '.StackName' -- "${CONFIG_FILE}")}"
PARAMETERS="$(jq --compact-output '.Parameters' -- "${CONFIG_FILE}")"
NO_ROLLBACK="$(jq --raw-output 'select(.DisableRollback|not)|"no-"' -- "${CONFIG_FILE}")"
TAGS="$(jq --compact-output '.Tags' -- "${CONFIG_FILE}")"
NO_TERM_PROT="$(jq --raw-output 'select(.EnableTerminationProtection|not)|"no-"' -- "${CONFIG_FILE}")"

# Create stack and wait until it is completely created:
aws cloudformation create-stack \
  --stack-name "${STACK_NAME}" \
  --template-body "${TEMPLATE_FILE}" \
  --parameters "${PARAMETERS}" \
  --"${NO_ROLLBACK}disable-rollback" \
  --capabilities CAPABILITY_IAM \
  --tags "${TAGS}" \
  --"${NO_TERM_PROT}enable-termination-protection" \
  | jq --raw-output '.StackId'
aws cloudformation wait stack-create-complete --stack-name "${STACK_NAME}"
